// Generated by go generate generate.go
// Created on 2019-02-04 22:42:01.277617 -0800 PST m=+0.002837871
package pantry

import (
	"fmt"

	"github.com/hashicorp/hcl2/hcl"
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/mikemackintosh/bakery/cli"
	"github.com/zclconf/go-cty/cty"
)

// Pkg is a pkg object
type Pkg struct {
	PantryItem
}

// Identifies the pkg spec
var pkgSpec = NewPantrySpec(&hcldec.ObjectSpec{
	"source": &hcldec.AttrSpec{
		Name:     "source",
		Required: true,
		Type:     cty.String,
	},
})

// Parse the confgiuration with the provided spec
func (p *Pkg) Parse(evalContext *hcl.EvalContext) error {
	cli.Debug(cli.INFO, "Preparing pkg", p.Name)
	cfg, diags := hcldec.Decode(p.Config, pkgSpec, evalContext)
	if len(diags) != 0 {
		for _, diag := range diags {
			cli.Debug(cli.INFO, "\t#", diag)
		}
		return fmt.Errorf("%s", diags.Errs()[0])
	}

	err := p.Populate(cfg, p)
	if err != nil {
		return err
	}

	return nil
}

// Bake will action the configuration
func (p *Pkg) Bake() {
}
